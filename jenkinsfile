pipeline {
    agent any

    environment {
        DISCORD_WEBHOOK_URL = credentials('DISCORD_WEBHOOK_URL') // Assurez-vous de configurer le webhook Discord comme une credential dans Jenkins
    }

    stages {
        stage('clear existing image and container') {
            steps {
                script {
                    sh "echo deleting existing image and container"
                    try {
                        sh "docker kill frontend"
                        sh "docker rm frontend"
                        sh "docker rmi frontend"
                    } catch (Exception e) {
                        echo "No existing image or container to remove"
                    }
                }
            }
            post {
                failure {
                    discordSend description: "Failed to clear existing image and container.", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "${DISCORD_WEBHOOK_URL}"
                }
            }
        }
        stage('build image') {
            steps {
                script {
                    sh "docker build -t frontend ."
                }
            }
            post {
                failure {
                    discordSend description: "Failed to build image.", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "${DISCORD_WEBHOOK_URL}"

                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    sh "docker run -d --name frontend -p 9015:80 --restart unless-stopped -v frontend:/etc/nginx frontend"
                }
            }
            post {
                success {
                    discordSend description: "Deployed image successfully.", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "${DISCORD_WEBHOOK_URL}"
                }
                failure {
                    discordSend description: "Failed to deploy image.", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "${DISCORD_WEBHOOK_URL}"
                }
            }
        }
    }
}

def dockerExec(command) {
    sh "docker exec ${CONTAINER_NAME} ${command}"
}