/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/_user'
import { Route as LoginImport } from './routes/_login'
import { Route as IndexImport } from './routes/index'
import { Route as ComponentsIndexImport } from './routes/components/index'
import { Route as UserUserImport } from './routes/_user/user'
import { Route as UserRestaurantImport } from './routes/_user/restaurant'
import { Route as LoginSignupImport } from './routes/_login/signup'
import { Route as LoginLoginImport } from './routes/_login/login'

// Create/Update Routes

const UserRoute = UserImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/_login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsIndexRoute = ComponentsIndexImport.update({
  path: '/components/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserRoute = UserUserImport.update({
  path: '/user',
  getParentRoute: () => UserRoute,
} as any)

const UserRestaurantRoute = UserRestaurantImport.update({
  path: '/restaurant',
  getParentRoute: () => UserRoute,
} as any)

const LoginSignupRoute = LoginSignupImport.update({
  path: '/signup',
  getParentRoute: () => LoginRoute,
} as any)

const LoginLoginRoute = LoginLoginImport.update({
  path: '/login',
  getParentRoute: () => LoginRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_login': {
      id: '/_login'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/_login/login': {
      id: '/_login/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLoginImport
      parentRoute: typeof LoginImport
    }
    '/_login/signup': {
      id: '/_login/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof LoginSignupImport
      parentRoute: typeof LoginImport
    }
    '/_user/restaurant': {
      id: '/_user/restaurant'
      path: '/restaurant'
      fullPath: '/restaurant'
      preLoaderRoute: typeof UserRestaurantImport
      parentRoute: typeof UserImport
    }
    '/_user/user': {
      id: '/_user/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserUserImport
      parentRoute: typeof UserImport
    }
    '/components/': {
      id: '/components/'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute: LoginRoute.addChildren({ LoginLoginRoute, LoginSignupRoute }),
  UserRoute: UserRoute.addChildren({ UserRestaurantRoute, UserUserRoute }),
  ComponentsIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_login",
        "/_user",
        "/components/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_login": {
      "filePath": "_login.tsx",
      "children": [
        "/_login/login",
        "/_login/signup"
      ]
    },
    "/_user": {
      "filePath": "_user.tsx",
      "children": [
        "/_user/restaurant",
        "/_user/user"
      ]
    },
    "/_login/login": {
      "filePath": "_login/login.tsx",
      "parent": "/_login"
    },
    "/_login/signup": {
      "filePath": "_login/signup.tsx",
      "parent": "/_login"
    },
    "/_user/restaurant": {
      "filePath": "_user/restaurant.tsx",
      "parent": "/_user"
    },
    "/_user/user": {
      "filePath": "_user/user.tsx",
      "parent": "/_user"
    },
    "/components/": {
      "filePath": "components/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
